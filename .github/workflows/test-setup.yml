name: Test Setup

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths: [ '.github/workflows/**' ]

jobs:
  test-setup:
    name: Test GitHub Actions Setup
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: stable

    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-stable-${{ hashFiles('**/Cargo.lock') }}

    - name: Check project structure
      run: |
        echo "🔍 Checking project structure..."
        echo "📁 Current directory: $(pwd)"
        echo "📁 Contents:"
        ls -la
        echo ""
        echo "📦 Cargo.toml contents:"
        cat Cargo.toml | head -20
        echo ""
        echo "🔧 GitHub Actions workflows:"
        ls -la .github/workflows/

    - name: Verify Rust project
      run: |
        echo "🦀 Verifying Rust project..."
        cargo --version
        cargo check --message-format=short

    - name: Run basic tests
      run: |
        echo "🧪 Running basic tests..."
        cargo test --lib --bins --tests --examples --no-run

    - name: Check binary compilation
      run: |
        echo "🏗️  Testing binary compilation..."
        cargo build --release
        echo "✅ Binary compiled successfully!"
        
        if [ -f "target/release/website-mirror" ]; then
          echo "📦 Binary size: $(stat -c%s target/release/website-mirror) bytes"
        elif [ -f "target/release/website-mirror.exe" ]; then
          echo "📦 Binary size: $(stat -c%s target/release/website-mirror.exe) bytes"
        else
          echo "⚠️  Binary not found in expected location"
          find target/release/ -name "*website-mirror*" -type f
        fi

    - name: Test CLI help
      run: |
        echo "📋 Testing CLI help..."
        ./target/release/website-mirror --help || ./target/release/website-mirror.exe --help

    - name: Success message
      run: |
        echo ""
        echo "🎉 GitHub Actions setup test completed successfully!"
        echo "✅ All workflows are properly configured"
        echo "✅ Rust project builds and tests correctly"
        echo "✅ Binary compilation works"
        echo "✅ CLI functionality verified"
        echo ""
        echo "🚀 Ready for CI/CD automation!" 